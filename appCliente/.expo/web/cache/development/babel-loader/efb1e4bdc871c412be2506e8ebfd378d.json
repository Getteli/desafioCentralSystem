{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/var/www/html/Desafio/appCliente/pages/Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { WebView } from 'react-native-webview';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport AuthService from \"./../services/AuthService\";\n\nfunction Login() {\n  var navigation = useNavigation();\n\n  function handleLoginApi() {\n    var response;\n    return _regeneratorRuntime.async(function handleLoginApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AuthService.doUserLogin(postData.toString()));\n\n          case 2:\n            response = _context.sent;\n\n            if (response) {\n              Linking.openURL(response);\n            } else {\n              alert(\"Erro ao se conectar com o Servidor da API\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleButtonPress() {\n    var postData, response;\n    return _regeneratorRuntime.async(function handleButtonPress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            postData = new URLSearchParams({\n              client_id: 3,\n              redirect_url: \"http://192.168.1.40:8001/callback\",\n              response_type: 'code',\n              scope: '',\n              state: makeid(40)\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AuthService.doUserLogin(postData.toString()));\n\n          case 3:\n            response = _context2.sent;\n\n            if (response) {\n              Linking.openURL(response);\n            } else {\n              alert(\"Please check your credentials and try agian\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Fa\\xE7a login\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Poderia colocar um botao de registrar e o campo de senha, mas estou fazendo apenas o teste de login direto pela API\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"seuemail@provedor.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonSend,\n    onPress: handleButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonSend,\n    onPress: handleLoginApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Conectar via API\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Voltar\")))));\n}\n\nvar styles = StyleSheet.create({\n  inputContainer: {\n    margin: 20,\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topImage: {\n    margin: 20\n  },\n  title: {\n    fontSize: 20\n  },\n  input: {\n    marginTop: 10,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    paddingHorizontal: 24,\n    fontSize: 16,\n    alignItems: 'stretch'\n  },\n  buttonSend: {\n    marginTop: 10,\n    height: 60,\n    backgroundColor: 'green',\n    borderRadius: 10,\n    paddingHorizontal: 24,\n    fontSize: 16,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textButton: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  button: {\n    marginTop: 20,\n    alignItems: 'center',\n    backgroundColor: '#0000ff',\n    padding: 10\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/var/www/html/Desafio/appCliente/pages/Login.js"],"names":["React","useEffect","useState","WebView","useNavigation","axios","AuthService","Login","navigation","handleLoginApi","doUserLogin","postData","toString","response","Linking","openURL","alert","handleButtonPress","URLSearchParams","client_id","redirect_url","response_type","scope","state","makeid","styles","container","inputContainer","input","buttonSend","textButton","button","goBack","StyleSheet","create","margin","alignItems","justifyContent","topImage","title","fontSize","marginTop","height","backgroundColor","borderRadius","paddingHorizontal","color","fontWeight","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;AAEA,SAASC,KAAT,GAAiB;AAGf,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AAGA,WAAeK,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyBH,WAAW,CAACI,WAAZ,CAAwBC,QAAQ,CAACC,QAAT,EAAxB,CADzB;;AAAA;AACQC,YAAAA,QADR;;AAGE,gBAAIA,QAAJ,EAAc;AACZC,cAAAA,OAAO,CAACC,OAAR,CAAgBF,QAAhB;AACD,aAFD,MAEO;AACLG,cAAAA,KAAK,CAAC,2CAAD,CAAL;AACD;;AAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,WAAeC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQN,YAAAA,QAFR,GAEmB,IAAIO,eAAJ,CAAoB;AACnCC,cAAAA,SAAS,EAAE,CADwB;AAEnCC,cAAAA,YAAY,EAAE,mCAFqB;AAGnCC,cAAAA,aAAa,EAAE,MAHoB;AAInCC,cAAAA,KAAK,EAAE,EAJ4B;AAKnCC,cAAAA,KAAK,EAAEC,MAAM,CAAC,EAAD;AALsB,aAApB,CAFnB;AAAA;AAAA,6CAUyBlB,WAAW,CAACI,WAAZ,CAAwBC,QAAQ,CAACC,QAAT,EAAxB,CAVzB;;AAAA;AAUQC,YAAAA,QAVR;;AAYE,gBAAIA,QAAJ,EAAc;AAEZC,cAAAA,OAAO,CAACC,OAAR,CAAgBF,QAAhB;AAGD,aALD,MAKO;AACLG,cAAAA,KAAK,CAAC,6CAAD,CAAL;AACD;;AAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqCA,SACE,0CACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAFF,CADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,MAAM,CAACG,KAAzB;AAAgC,IAAA,WAAW,EAAC,uBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEH,MAAM,CAACI,UAAhC;AAA4C,IAAA,OAAO,EAAEZ,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAHF,EAOE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEL,MAAM,CAACI,UAAhC;AAA4C,IAAA,OAAO,EAAEpB,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAPF,EAWE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEL,MAAM,CAACM,MAAhC;AAAwC,IAAA,OAAO,EAAE;AAAA,aAAMvB,UAAU,CAACwB,MAAX,EAAN;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CALF,CADF,CADF;AAyBD;;AAED,IAAML,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,cAAc,EAAE;AACZQ,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,UAAU,EAAE,SAFA;AAGZC,IAAAA,cAAc,EAAE;AAHJ,GADa;AAM7BX,EAAAA,SAAS,EAAE;AACTU,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE;AAFP,GANkB;AAU7BC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,MAAM,EAAE;AADF,GAVmB;AAa7BI,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GAbsB;AAgB7BZ,EAAAA,KAAK,EAAE;AACHa,IAAAA,SAAS,EAAE,EADR;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,eAAe,EAAE,MAHd;AAIHC,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,iBAAiB,EAAE,EALhB;AAMHL,IAAAA,QAAQ,EAAE,EANP;AAOHJ,IAAAA,UAAU,EAAE;AAPT,GAhBsB;AAyB7BP,EAAAA,UAAU,EAAE;AACRY,IAAAA,SAAS,EAAE,EADH;AAERC,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,eAAe,EAAE,OAHT;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRC,IAAAA,iBAAiB,EAAE,EALX;AAMRL,IAAAA,QAAQ,EAAE,EANF;AAORJ,IAAAA,UAAU,EAAE,QAPJ;AAQRC,IAAAA,cAAc,EAAE;AARR,GAzBiB;AAmC7BP,EAAAA,UAAU,EAAE;AACRgB,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAnCiB;AAuC7BhB,EAAAA,MAAM,EAAC;AACLU,IAAAA,SAAS,EAAE,EADN;AAELL,IAAAA,UAAU,EAAE,QAFP;AAGLO,IAAAA,eAAe,EAAE,SAHZ;AAILK,IAAAA,OAAO,EAAE;AAJJ;AAvCsB,CAAlB,CAAf;AA+CA,eAAezC,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, StyleSheet, Text, View, TouchableOpacity, Image, TextInput, ScrollView, Linking } from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport AuthService from './../services/AuthService';\n\nfunction Login() {\n\n  // button\n  const navigation = useNavigation();\n\n\n  async function handleLoginApi(){\n    const response = await AuthService.doUserLogin(postData.toString());\n\n    if (response) {\n      Linking.openURL(response);\n    } else {\n      alert(\"Erro ao se conectar com o Servidor da API\");\n    }\n  }\n\n  async function handleButtonPress(){\n\n    const postData = new URLSearchParams({\n      client_id: 3, // o id do client no nosso servidor\n      redirect_url: \"http://192.168.1.40:8001/callback\", // a url q vai voltar\n      response_type: 'code', // o tipo\n      scope: '', // scope\n      state: makeid(40) // a chave da transacao\n    });\n\n    const response = await AuthService.doUserLogin(postData.toString());\n\n    if (response) {\n      // alert(\"foi\");\n      Linking.openURL(response);\n      // AuthService.handleLoginSuccess(response, this.state.isChecked);\n      // this.props.history.push(\"/home\");\n    } else {\n      alert(\"Please check your credentials and try agian\");\n    }\n    // alerta padrao do celular\n      // Alert.alert(\"email: \" + email + \" Senha: \" + pass);\n    // uso do axios para post\n      // axios.post('http://192.168.1.40:3030/cadastrarteste', {nome},{\n      // \"headers\": {\n      //   \"content-type\": \"application/json\",\n      // },\n      // })\n      // .then(function(response) {\n      //   // console.log(response);\n      // })\n      // .catch(function(error) {\n      //   // console.log(error);\n      // });\n      // `http://localhost:${config.fusionAuthPort}/oauth2/authorize?client_id=${config.clientID}&redirect_uri=${config.redirectURI}&response_type=code`\n  }\n\n  return (\n    <>\n      <ScrollView>\n        <View style={styles.container}>\n          <Text>Faça login</Text>\n          <Text>Poderia colocar um botao de registrar e o campo de senha, mas estou fazendo apenas o teste de login direto pela API</Text>\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput style={styles.input} placeholder=\"seuemail@provedor.com\" />\n\n          <TouchableOpacity style={styles.buttonSend} onPress={handleButtonPress}>\n            <Text style={styles.textButton}>Login</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.buttonSend} onPress={handleLoginApi}>\n            <Text style={styles.textButton}>Conectar via API</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button} onPress={() => navigation.goBack()}>\n            <Text style={styles.textButton}>Voltar</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n    inputContainer: {\n        margin: 20,\n        alignItems: 'stretch',\n        justifyContent: 'center'\n    },\n    container: {\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    topImage: {\n        margin: 20,\n    },\n    title: {\n        fontSize: 20,\n    },\n    input: {\n        marginTop: 10,\n        height: 60,\n        backgroundColor: '#fff',\n        borderRadius: 10,\n        paddingHorizontal: 24,\n        fontSize: 16,\n        alignItems: 'stretch',\n    },\n    buttonSend: {\n        marginTop: 10,\n        height: 60,\n        backgroundColor: 'green',\n        borderRadius: 10,\n        paddingHorizontal: 24,\n        fontSize: 16,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    textButton: {\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    button:{\n      marginTop: 20,\n      alignItems: 'center',\n      backgroundColor: '#0000ff',\n      padding: 10,\n    },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}