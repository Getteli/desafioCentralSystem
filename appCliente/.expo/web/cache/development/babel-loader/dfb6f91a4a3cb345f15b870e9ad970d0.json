{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from \"axios\";\nimport UrlService from \"./UrlService\";\nimport CookieService from \"./CookieService\";\nvar expiresAt = 60 * 24;\n\nvar AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n\n  _createClass(AuthService, [{\n    key: \"doUserLogin\",\n    value: function doUserLogin(credentials) {\n      return _regeneratorRuntime.async(function doUserLogin$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              return _context.abrupt(\"return\", UrlService.conectAPI() + \"?\" + credentials);\n\n            case 4:\n              _context.prev = 4;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error\", _context.t0.response);\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 4]], Promise);\n    }\n  }, {\n    key: \"loginUserApp\",\n    value: function loginUserApp(credentials) {\n      var response, date, options;\n      return _regeneratorRuntime.async(function loginUserApp$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(UrlService.loginClient() + \"?\" + credentials));\n\n            case 3:\n              response = _context2.sent;\n\n              if (!response) {\n                _context2.next = 11;\n                break;\n              }\n\n              date = new Date();\n              date.setTime(date.getTime() + expiresAt * 60 * 1000);\n              options = {\n                path: \"/\",\n                expires: date\n              };\n              CookieService.set(\"access_token\", response.data.access_token, options);\n              CookieService.set(\"email\", response.data.email, options);\n              return _context2.abrupt(\"return\", true);\n\n            case 11:\n              return _context2.abrupt(\"return\", false);\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Error\", _context2.t0.response);\n              return _context2.abrupt(\"return\", false);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"sources":["/var/www/html/Desafio/appCliente/services/AuthService.js"],"names":["axios","UrlService","CookieService","expiresAt","AuthService","credentials","conectAPI","console","error","response","get","loginClient","date","Date","setTime","getTime","options","path","expires","set","data","access_token","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,SAAS,GAAG,KAAK,EAAvB;;IAEMC,W;;;;;;;WACJ,qBAAkBC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEWJ,UAAU,CAACK,SAAX,KAAuB,GAAvB,GAA2BD,WAFtC;;AAAA;AAAA;AAAA;AAMIE,cAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuB,YAAMC,QAA7B;AANJ,+CAOW,KAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAWA,sBAAmBJ,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BL,KAAK,CAACU,GAAN,CAAUT,UAAU,CAACU,WAAX,KAAyB,GAAzB,GAA6BN,WAAvC,CAF3B;;AAAA;AAEUI,cAAAA,QAFV;;AAAA,mBAIOA,QAJP;AAAA;AAAA;AAAA;;AAKUG,cAAAA,IALV,GAKiB,IAAIC,IAAJ,EALjB;AAMMD,cAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBZ,SAAS,GAAG,EAAZ,GAAiB,IAA/C;AACMa,cAAAA,OAPZ,GAOsB;AAAEC,gBAAAA,IAAI,EAAE,GAAR;AAAaC,gBAAAA,OAAO,EAAEN;AAAtB,eAPtB;AAQMV,cAAAA,aAAa,CAACiB,GAAd,CAAkB,cAAlB,EAAkCV,QAAQ,CAACW,IAAT,CAAcC,YAAhD,EAA8DL,OAA9D;AACAd,cAAAA,aAAa,CAACiB,GAAd,CAAkB,OAAlB,EAA2BV,QAAQ,CAACW,IAAT,CAAcE,KAAzC,EAAgDN,OAAhD;AATN,gDAUa,IAVb;;AAAA;AAAA,gDAcW,KAdX;;AAAA;AAAA;AAAA;AAgBIT,cAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuB,aAAMC,QAA7B;AAhBJ,gDAiBW,KAjBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAuBF,eAAe,IAAIL,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\nimport UrlService from \"./UrlService\";\nimport CookieService from \"./CookieService\";\n\nconst expiresAt = 60 * 24;\n\nclass AuthService {\n  async doUserLogin(credentials) {\n    try {\n      return UrlService.conectAPI()+\"?\"+credentials;\n      // const response = await axios.get(UrlService.conectAPI()+\"?\"+credentials);\n      // return response.data;\n    } catch (error) {\n      console.error(\"Error\", error.response);\n      return false;\n    }\n  }\n\n  async loginUserApp(credentials) {\n    try {\n      const response = await axios.get(UrlService.loginClient()+\"?\"+credentials);\n      // console.log(response.data.email);\n      if(response){\n        let date = new Date();\n        date.setTime(date.getTime() + expiresAt * 60 * 1000);\n        const options = { path: \"/\", expires: date };\n        CookieService.set(\"access_token\", response.data.access_token, options);\n        CookieService.set(\"email\", response.data.email, options);\n        return true;\n      }\n\n      // return response.data;\n      return false;\n    } catch (error) {\n      console.error(\"Error\", error.response);\n      return false;\n    }\n  }\n\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}