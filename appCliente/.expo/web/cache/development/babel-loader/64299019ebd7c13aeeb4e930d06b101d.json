{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Desafio/appCliente/pages/Home.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport * as Expo from 'expo';\nexport default function App() {\n  var navigation = useNavigation();\n  var prefix = Expo.Linking.makeUrl('/');\n  useEffect(function () {}, []);\n\n  var login = function login() {\n    fetch(\"http://192.168.1.40:3030/\", {\n      method: \"GET\"\n    }).then(function (response) {\n      return response.text();\n    }).then(function (result) {\n      redirect(result);\n    }).catch(function (err) {\n      alert(err);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"va para o botao de login\"), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('LinkExpo');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"pagina vazia\")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    margin: 20,\n    width: 200,\n    color: 'white',\n    borderRadius: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/var/www/html/Desafio/appCliente/pages/Home.js"],"names":["StatusBar","React","useEffect","useNavigation","Expo","App","navigation","prefix","Linking","makeUrl","login","fetch","method","then","response","text","result","redirect","catch","err","alert","styles","container","button","navigate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","margin","width","color","borderRadius","fontWeight","fontSize"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,UAAU,GAAGH,aAAa,EAAhC;AACA,MAAMI,MAAM,GAAGH,IAAI,CAACI,OAAL,CAAaC,OAAb,CAAqB,GAArB,CAAf;AAEAP,EAAAA,SAAS,CAAC,YAAK,CAEd,CAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMQ,KAAK,GAAG,SAARA,KAAQ,GAAM;AAGpBC,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AAClCC,MAAAA,MAAM,EAAE;AAD0B,KAA9B,CAAL,CAKCC,IALD,CAKM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KALd,EAMCF,IAND,CAMM,UAAAG,MAAM,EAAI;AAEZC,MAAAA,QAAQ,CAACD,MAAD,CAAR;AAGH,KAXD,EAYCE,KAZD,CAYO,UAASC,GAAT,EAAc;AACdC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACN,KAdD;AAeC,GAlBD;;AAoBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAGE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAED,MAAM,CAACE,MAAhC;AAAwC,IAAA,OAAO,EAAE;AAAA,aAAMjB,UAAU,CAACkB,QAAX,CAAoB,OAApB,CAAN;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACN,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAHF,EAOE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEM,MAAM,CAACE,MAAhC;AAAwC,IAAA,OAAO,EAAE;AAAA,aAAMjB,UAAU,CAACkB,QAAX,CAAoB,UAApB,CAAN;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACN,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAPF,EAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD;AAED,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BP,EAAAA,MAAM,EAAC;AACLK,IAAAA,eAAe,EAAE,MADZ;AAELG,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,KAAK,EAAE,GAJF;AAKLC,IAAAA,KAAK,EAAE,OALF;AAMLC,IAAAA,YAAY,EAAE,EANT;AAOLN,IAAAA,UAAU,EAAE,QAPP;AAQLC,IAAAA,cAAc,EAAE;AARX,GAPwB;AAiB/Bf,EAAAA,IAAI,EAAC;AACHqB,IAAAA,UAAU,EAAE,MADT;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AAjB0B,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, Text, View, TouchableOpacity, Linking } from 'react-native';\nimport * as Expo from 'expo';\n\nexport default function App() {\n  // button\n  const navigation = useNavigation();\n  const prefix = Expo.Linking.makeUrl('/');\n\n  useEffect(() =>{\n    // alert(prefix);\n  }, []);\n\n  const login = () => {\n\t\t// crie o fetch\n\t\t// passe a url, e depois como 2° param um array passando alguns dados, method, body (o data) entre outros, pesquisar caso necessario (como header e etc)\n\t\tfetch(\"http://192.168.1.40:3030/\", {\n\t\t\tmethod: \"GET\"\n\t\t\t// body: \"formData\"\n\t\t})\n\t\t// .then(response => response.json()) // o fetch retorna uma resposta em promise, entao para acessar o dado precisa ser por .then(), se o dado for em json use como acima\n\t\t.then(response => response.text() ) // para pegar um dado que tenha tido output do outro lado, pegue por text()\n\t\t.then(result => {\n      // alert(result);\n      redirect(result);\n\t\t\t// add o resultado a div\n\t\t\t// document.getElementById(\"resultado\").innerHTML = result;\n\t\t}) // depois faça o que quiser com o dado\n\t\t.catch(function(err) {\n       \t\talert(err);\n\t\t});\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>va para o botao de login</Text>\n\n      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Login')}>\n        <Text style={styles.text}>Login</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('LinkExpo')}>\n        <Text style={styles.text}>pagina vazia</Text>\n      </TouchableOpacity>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button:{\n    backgroundColor: 'blue',\n    padding: 10,\n    margin: 20,\n    width: 200,\n    color: 'white',\n    borderRadius: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text:{\n    fontWeight: 'bold',\n    fontSize: 20,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}