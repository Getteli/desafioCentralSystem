{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/Desafio/appCliente/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport NavigationContainer from \"./Routes\";\nimport * as Location from 'expo-location';\nimport axios from 'axios';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      (function _callee() {\n        var _await$Location$reque, status, locationAPI;\n\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n              case 2:\n                _await$Location$reque = _context.sent;\n                status = _await$Location$reque.status;\n\n                if (!(status !== 'granted')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                setErrorMsg('Permission to access location was denied');\n                return _context.abrupt(\"return\");\n\n              case 7:\n                if (!(1 == 2)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 10;\n                return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n              case 10:\n                locationAPI = _context.sent;\n                setLocation(locationAPI);\n                axios.post('http://192.168.1.40:8000/api/location/post', locationAPI.coords, {\n                  \"headers\": {\n                    \"Authorization\": \"Bearer \" + CookieService.get(\"access_token\"),\n                    \"content-type\": \"application/json\"\n                  }\n                }).then(function (response) {}).catch(function (error) {});\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n\n      return function () {\n        return clearInterval(interval);\n      };\n    }, 20000);\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/var/www/html/Desafio/appCliente/App.js"],"names":["StatusBar","React","useState","useEffect","NavigationContainer","Location","axios","App","location","setLocation","errorMsg","setErrorMsg","interval","setInterval","requestPermissionsAsync","status","getCurrentPositionAsync","locationAPI","post","coords","CookieService","get","then","response","catch","error","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAEA,OAAOC,mBAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACIL,QAAQ,CAAC,IAAD,CADZ;AAAA;AAAA,MACrBM,QADqB;AAAA,MACXC,WADW;;AAAA,mBAEIP,QAAQ,CAAC,IAAD,CAFZ;AAAA;AAAA,MAErBQ,QAFqB;AAAA,MAEXC,WAFW;;AAK5BR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC,OAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACwBR,QAAQ,CAACS,uBAAT,EADxB;;AAAA;AAAA;AACOC,gBAAAA,MADP,yBACOA,MADP;;AAAA,sBAEKA,MAAM,KAAK,SAFhB;AAAA;AAAA;AAAA;;AAGGJ,gBAAAA,WAAW,CAAC,0CAAD,CAAX;AAHH;;AAAA;AAAA,sBAMI,KAAK,CANT;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAQ2BN,QAAQ,CAACW,uBAAT,CAAiC,EAAjC,CAR3B;;AAAA;AAQOC,gBAAAA,WARP;AASGR,gBAAAA,WAAW,CAACQ,WAAD,CAAX;AAIAX,gBAAAA,KAAK,CAACY,IAAN,CAAW,4CAAX,EAAyDD,WAAW,CAACE,MAArE,EAA8E;AAC9E,6BAAW;AACT,qCAAiB,YAAYC,aAAa,CAACC,GAAd,CAAkB,cAAlB,CADpB;AAET,oCAAgB;AAFP;AADmE,iBAA9E,EAMCC,IAND,CAMM,UAASC,QAAT,EAAmB,CAExB,CARD,EASCC,KATD,CASO,UAASC,KAAT,EAAgB,CAEtB,CAXD;;AAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AA4BA,aAAO;AAAA,eAAMC,aAAa,CAACd,QAAD,CAAnB;AAAA,OAAP;AACD,KA9B2B,EA8BzB,KA9ByB,CAA5B;AA+BD,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, PermissionsAndroid } from 'react-native';\nimport NavigationContainer from './Routes';\nimport * as Location from 'expo-location';\nimport axios from 'axios';\n\nexport default function App() {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  // ao carregar pega a localizacao, mas dentro tem um setInterval para a cada x segundos\n  useEffect(() => {\n    const interval = setInterval(() => {\n      (async () => {\n        let { status } = await Location.requestPermissionsAsync();\n        if (status !== 'granted') {\n          setErrorMsg('Permission to access location was denied');\n          return;\n        }\n        if(1 == 2)\n        {\n          let locationAPI = await Location.getCurrentPositionAsync({});\n          setLocation(locationAPI);\n\n          // console.log(\"Latitude: \" + locationAPI.coords.latitude + \" Longitude: \" + locationAPI.coords.longitude);\n          // sobe para o servidor a localizacao\n          axios.post('http://192.168.1.40:8000/api/location/post',(locationAPI.coords) ,{\n          \"headers\": {\n            \"Authorization\": \"Bearer \" + CookieService.get(\"access_token\"),\n            \"content-type\": \"application/json\",\n          },\n          })\n          .then(function(response) {\n            // console.log(response);\n          })\n          .catch(function(error) {\n            // console.log(error);\n          });\n        }\n\n      })();\n      return () => clearInterval(interval);\n    }, 20000);\n  }, []);\n\n  return (\n      <NavigationContainer />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}