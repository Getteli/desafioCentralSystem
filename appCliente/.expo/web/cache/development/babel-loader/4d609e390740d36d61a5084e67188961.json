{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from \"axios\";\nimport UrlService from \"./UrlService\";\nimport CookieService from \"./CookieService\";\nvar expiresAt = 60 * 24;\n\nvar AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n\n  _createClass(AuthService, [{\n    key: \"doUserLogin\",\n    value: function doUserLogin(credentials) {\n      var response;\n      return _regeneratorRuntime.async(function doUserLogin$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(UrlService.conectAPI() + \"?\" + credentials));\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error\", _context.t0.response);\n              return _context.abrupt(\"return\", false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"loginUserApp\",\n    value: function loginUserApp(credentials) {\n      var response, date, options;\n      return _regeneratorRuntime.async(function loginUserApp$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(UrlService.loginClient() + \"?\" + credentials));\n\n            case 3:\n              response = _context2.sent;\n\n              if (response) {\n                _context2.next = 11;\n                break;\n              }\n\n              date = new Date();\n              date.setTime(date.getTime() + expiresAt * 60 * 1000);\n              options = {\n                path: \"/\",\n                expires: date\n              };\n              CookieService.set(\"access_token\", response.access_token, options);\n              CookieService.set(\"email\", response.email, options);\n              return _context2.abrupt(\"return\", true);\n\n            case 11:\n              return _context2.abrupt(\"return\", false);\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Error\", _context2.t0.response);\n              return _context2.abrupt(\"return\", false);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    }\n  }, {\n    key: \"handleLoginSuccess\",\n    value: function handleLoginSuccess(response, remember) {\n      if (!remember) {\n        var _options = {\n          path: \"/\"\n        };\n        CookieService.set(\"access_token\", response.access_token, _options);\n        return true;\n      }\n\n      var date = new Date();\n      date.setTime(date.getTime() + expiresAt * 60 * 1000);\n      var options = {\n        path: \"/\",\n        expires: date\n      };\n      CookieService.set(\"access_token\", response.access_token, options);\n      return true;\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"sources":["/var/www/html/Desafio/appCliente/services/AuthService.js"],"names":["axios","UrlService","CookieService","expiresAt","AuthService","credentials","get","conectAPI","response","data","console","error","loginClient","date","Date","setTime","getTime","options","path","expires","set","access_token","email","remember"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,SAAS,GAAG,KAAK,EAAvB;;IAUMC,W;;;;;;;WACJ,qBAAkBC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BL,KAAK,CAACM,GAAN,CAAUL,UAAU,CAACM,SAAX,KAAuB,GAAvB,GAA2BF,WAArC,CAF3B;;AAAA;AAEUG,cAAAA,QAFV;AAAA,+CAGWA,QAAQ,CAACC,IAHpB;;AAAA;AAAA;AAAA;AAKIC,cAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuB,YAAMH,QAA7B;AALJ,+CAMW,KANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAUA,sBAAmBH,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BL,KAAK,CAACM,GAAN,CAAUL,UAAU,CAACW,WAAX,KAAyB,GAAzB,GAA6BP,WAAvC,CAF3B;;AAAA;AAEUG,cAAAA,QAFV;;AAAA,kBAGQA,QAHR;AAAA;AAAA;AAAA;;AAIUK,cAAAA,IAJV,GAIiB,IAAIC,IAAJ,EAJjB;AAKMD,cAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBb,SAAS,GAAG,EAAZ,GAAiB,IAA/C;AACMc,cAAAA,OANZ,GAMsB;AAAEC,gBAAAA,IAAI,EAAE,GAAR;AAAaC,gBAAAA,OAAO,EAAEN;AAAtB,eANtB;AAOMX,cAAAA,aAAa,CAACkB,GAAd,CAAkB,cAAlB,EAAkCZ,QAAQ,CAACa,YAA3C,EAAyDJ,OAAzD;AACAf,cAAAA,aAAa,CAACkB,GAAd,CAAkB,OAAlB,EAA2BZ,QAAQ,CAACc,KAApC,EAA2CL,OAA3C;AARN,gDASa,IATb;;AAAA;AAAA,gDAaW,KAbX;;AAAA;AAAA;AAAA;AAeIP,cAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuB,aAAMH,QAA7B;AAfJ,gDAgBW,KAhBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAoBA,4BAAmBA,QAAnB,EAAkCe,QAAlC,EAAqD;AACnD,UAAI,CAACA,QAAL,EAAe;AACb,YAAMN,QAAO,GAAG;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAhB;AACAhB,QAAAA,aAAa,CAACkB,GAAd,CAAkB,cAAlB,EAAkCZ,QAAQ,CAACa,YAA3C,EAAyDJ,QAAzD;AACA,eAAO,IAAP;AACD;;AAED,UAAIJ,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBb,SAAS,GAAG,EAAZ,GAAiB,IAA/C;AACA,UAAMc,OAAO,GAAG;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,OAAO,EAAEN;AAAtB,OAAhB;AACAX,MAAAA,aAAa,CAACkB,GAAd,CAAkB,cAAlB,EAAkCZ,QAAQ,CAACa,YAA3C,EAAyDJ,OAAzD;AACA,aAAO,IAAP;AACD;;;;;;AAGH,eAAe,IAAIb,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\nimport UrlService from \"./UrlService\";\nimport CookieService from \"./CookieService\";\n\nconst expiresAt = 60 * 24;\n\ninterface Credentials {\n  client_id: string;\n  redirect_url: string;\n  response_type: string;\n  scope: string;\n  state: string;\n}\n\nclass AuthService {\n  async doUserLogin(credentials) {\n    try {\n      const response = await axios.get(UrlService.conectAPI()+\"?\"+credentials);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error\", error.response);\n      return false;\n    }\n  }\n\n  async loginUserApp(credentials) {\n    try {\n      const response = await axios.get(UrlService.loginClient()+\"?\"+credentials);\n      if(!response){\n        let date = new Date();\n        date.setTime(date.getTime() + expiresAt * 60 * 1000);\n        const options = { path: \"/\", expires: date };\n        CookieService.set(\"access_token\", response.access_token, options);\n        CookieService.set(\"email\", response.email, options);\n        return true;\n      }\n\n      // return response.data;\n      return false;\n    } catch (error) {\n      console.error(\"Error\", error.response);\n      return false;\n    }\n  }\n\n  handleLoginSuccess(response: any, remember: boolean) {\n    if (!remember) {\n      const options = { path: \"/\" };\n      CookieService.set(\"access_token\", response.access_token, options);\n      return true;\n    }\n\n    let date = new Date();\n    date.setTime(date.getTime() + expiresAt * 60 * 1000);\n    const options = { path: \"/\", expires: date };\n    CookieService.set(\"access_token\", response.access_token, options);\n    return true;\n  }\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}